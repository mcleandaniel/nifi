{
  "version": "1",
  "generated_at": "2025-10-19T07:19:09Z",
  "repo_root": ".",
  "scope": "tool",
  "topics": [
    {
      "id": "tool-automation-suite-overview",
      "title": "REST Automation Toolkit Overview",
      "summary": "Introduce the automation package, its CLI interface, and target scenarios for interacting with NiFi via REST.",
      "category": "overview",
      "recommended_sources": ["automation/README.md", "automation/pyproject.toml"],
      "priority": "high",
      "tags": ["automation", "cli", "overview"],
      "research_request": "Summarize feature scope, command categories, and environment prerequisites described in the README."
    },
    {
      "id": "tool-automation-suite-authentication",
      "title": "Authentication and Credential Handling",
      "summary": "Describe how the automation suite manages credentials, token requests, and TLS verification.",
      "category": "security",
      "recommended_sources": ["automation/src/nifi_automation/auth.py", "automation/src/nifi_automation/config.py"],
      "priority": "high",
      "tags": ["authentication", "tokens", "security"],
      "research_request": "Explain credential loading, token lifecycles, and configuration overrides for secure access."
    },
    {
      "id": "tool-automation-suite-http-client",
      "title": "HTTP Client Abstractions",
      "summary": "Explain the HTTP client layer, request retries, and error handling strategies used by the suite.",
      "category": "architecture",
      "recommended_sources": ["automation/src/nifi_automation/client.py"],
      "priority": "medium",
      "tags": ["http", "client", "architecture"],
      "research_request": "Describe how the client encapsulates session configuration, retries, and TLS toggles."
    },
    {
      "id": "tool-automation-suite-cli-commands",
      "title": "CLI Command Surface",
      "summary": "Document the Typer-based CLI commands, grouping, and options exported by the automation package.",
      "category": "reference",
      "recommended_sources": ["automation/src/nifi_automation/cli.py"],
      "priority": "medium",
      "tags": ["cli", "commands", "typer"],
      "research_request": "List command groups, required parameters, and usage examples for automation workflows."
    },
    {
      "id": "tool-automation-suite-service-introspection",
      "title": "Service Introspection Utilities",
      "summary": "Explain helpers that inspect NiFi controller services, process groups, and return structured reports.",
      "category": "operations",
      "recommended_sources": ["automation/src/nifi_automation/service_introspect.py"],
      "priority": "medium",
      "tags": ["introspection", "reports", "operations"],
      "research_request": "Describe inspection routines, report schemas, and how outputs support validation workflows."
    },
    {
      "id": "tool-automation-suite-flow-specs",
      "title": "Flow Specification Assets",
      "summary": "Summarize the provided flow specifications, schema expectations, and how they drive automation actions.",
      "category": "content",
      "recommended_sources": ["automation/flows/"],
      "priority": "medium",
      "tags": ["flows", "spec", "content"],
      "research_request": "Catalog available specs, required fields, and how automation commands reference them."
    },
    {
      "id": "tool-automation-suite-scripts",
      "title": "Supporting Automation Scripts",
      "summary": "Describe supplemental scripts used for integration testing, purging, and deployment orchestration.",
      "category": "operations",
      "recommended_sources": ["automation/scripts/"],
      "priority": "low",
      "tags": ["scripts", "operations", "automation"],
      "research_request": "Explain script responsibilities, inputs, and how they reinforce CLI-driven workflows."
    },
    {
      "id": "tool-automation-suite-testing",
      "title": "Unit and Integration Testing",
      "summary": "Explain the test layout, markers, and fixtures used to validate the automation suite.",
      "category": "quality",
      "recommended_sources": ["automation/tests/", "automation/pyproject.toml"],
      "priority": "low",
      "tags": ["testing", "pytest", "quality"],
      "research_request": "Describe unit versus integration coverage, environment flags, and test execution instructions."
    },
    {
      "id": "tool-automation-suite-reporting",
      "title": "Automation Reporting Outputs",
      "summary": "Describe generated reports, JSON outputs, and how they are consumed downstream.",
      "category": "analysis",
      "recommended_sources": ["automation/report.json"],
      "priority": "low",
      "tags": ["reports", "json", "outputs"],
      "research_request": "Explain report schemas, update cadence, and integration with analysis pipelines."
    },
    {
      "id": "tool-automation-suite-manifest",
      "title": "Manifest and Metadata Catalog",
      "summary": "Explain how manifests describe controller services, dependencies, and desired automation state.",
      "category": "configuration",
      "recommended_sources": ["automation/manifest/"],
      "priority": "low",
      "tags": ["manifest", "metadata", "configuration"],
      "research_request": "Document manifest structure, fields, and how automation commands leverage the catalog."
    }
  ]
}
