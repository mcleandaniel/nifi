{
  "version": "1",
  "generated_at": "2025-10-19T07:19:09Z",
  "repo_root": ".",
  "scope": "service",
  "topics": [
    {
      "id": "service-main-runtime-package",
      "title": "NiFi Server Packaging and Layout",
      "summary": "Describe how the server distribution is assembled, including directory layout, NAR loading, and bundled resources.",
      "category": "deployment",
      "recommended_sources": ["nifi-assembly/", "nifi-framework-bundle/nifi-server-nar/"],
      "priority": "high",
      "tags": ["packaging", "distribution", "runtime"],
      "research_request": "Map the installed filesystem structure, key directories, and how assemblies pull in framework NARs."
    },
    {
      "id": "service-main-configuration-baseline",
      "title": "Core Configuration Baseline",
      "summary": "Explain the foundational configuration files that govern ports, repositories, properties, and access policies for the NiFi server.",
      "category": "operations",
      "recommended_sources": ["nifi-framework-bundle/nifi-framework/nifi-resources/src/main/resources/conf/"],
      "priority": "high",
      "tags": ["configuration", "nifi.properties", "operations"],
      "research_request": "Detail key properties in nifi.properties, bootstrap.conf, and supporting XML descriptors and how they interact."
    },
    {
      "id": "service-main-bootstrap-lifecycle",
      "title": "Bootstrap and Lifecycle Scripts",
      "summary": "Document how bootstrap services start, monitor, and restart NiFi, including script behaviors on different platforms.",
      "category": "operations",
      "recommended_sources": ["nifi-bootstrap/src/", "nifi-framework-bundle/nifi-framework/nifi-resources/src/main/resources/bin/"],
      "priority": "high",
      "tags": ["bootstrap", "lifecycle", "operations"],
      "research_request": "Describe bootstrap service responsibilities, configurable options, and integration with service managers."
    },
    {
      "id": "service-main-cluster-coordination",
      "title": "Cluster Coordination and Protocol",
      "summary": "Explain how NiFi nodes coordinate in clustered deployments, including election, communication, and fault handling.",
      "category": "architecture",
      "recommended_sources": ["nifi-framework-bundle/nifi-framework/nifi-framework-cluster/", "nifi-framework-bundle/nifi-framework/nifi-framework-cluster-protocol/"],
      "priority": "high",
      "tags": ["cluster", "coordination", "protocol"],
      "research_request": "Clarify heartbeat flows, consensus responsibilities, and configuration required for clustered operation."
    },
    {
      "id": "service-main-leader-election",
      "title": "Leader Election and Node Roles",
      "summary": "Summarize leader election mechanics, roles within a cluster, and fallback behavior during node turnover.",
      "category": "architecture",
      "recommended_sources": ["nifi-framework-bundle/nifi-framework/nifi-framework-leader-election-shared/", "nifi-framework-bundle/nifi-framework/nifi-headless-server/"],
      "priority": "medium",
      "tags": ["leader-election", "cluster", "roles"],
      "research_request": "Detail election algorithms, failover timing, and responsibilities of primary versus secondary nodes."
    },
    {
      "id": "service-main-state-management",
      "title": "State and History Management",
      "summary": "Describe how runtime state, status history, and controller metadata are persisted and retrieved.",
      "category": "operations",
      "recommended_sources": ["nifi-framework-bundle/nifi-framework/nifi-framework-core/", "nifi-framework-bundle/nifi-framework/nifi-framework-status-history-shared/"],
      "priority": "medium",
      "tags": ["state", "history", "persistence"],
      "research_request": "Explain local versus cluster state stores, backup strategies, and configuration for state providers."
    },
    {
      "id": "service-main-site-to-site-gateway",
      "title": "Site-to-Site Gateway Configuration",
      "summary": "Detail setup and tuning for Site-to-Site endpoints managed by the NiFi server.",
      "category": "integration",
      "recommended_sources": ["nifi-framework-bundle/nifi-framework/nifi-site-to-site/", "nifi-commons/nifi-site-to-site-client/"],
      "priority": "medium",
      "tags": ["site-to-site", "gateway", "integration"],
      "research_request": "Outline port configuration, security controls, and performance considerations for Site-to-Site listeners."
    },
    {
      "id": "service-main-repository-tuning",
      "title": "Repository Tuning and Backing Stores",
      "summary": "Explain how to size, configure, and optimize content, FlowFile, and provenance repositories for the main service.",
      "category": "operations",
      "recommended_sources": ["nifi-framework-bundle/nifi-framework-extensions/nifi-provenance-repository-bundle/", "nifi-framework-bundle/nifi-framework/nifi-repository-models/"],
      "priority": "high",
      "tags": ["repository", "tuning", "storage"],
      "research_request": "Provide tuning recommendations, SSD versus disk considerations, and recovery strategies for repositories."
    },
    {
      "id": "service-main-extension-loading",
      "title": "Extension Loading Pipeline",
      "summary": "Describe how the server locates, validates, and loads NAR-based extensions at startup and runtime.",
      "category": "extensibility",
      "recommended_sources": ["nifi-framework-bundle/nifi-framework/nifi-nar-utils/", "nifi-framework-bundle/nifi-framework/nifi-framework-nar-loading-utils/"],
      "priority": "medium",
      "tags": ["nar", "extensions", "loading"],
      "research_request": "Detail classloader isolation, dependency resolution, and diagnostics for failed NAR loads."
    },
    {
      "id": "service-main-security-configuration",
      "title": "Authorization and Identity Providers",
      "summary": "Explain configuration of authorizers, identity providers, and certificate trust for the NiFi server.",
      "category": "security",
      "recommended_sources": ["nifi-framework-bundle/nifi-framework/nifi-resources/src/main/resources/conf/authorizers.xml", "nifi-framework-bundle/nifi-framework/nifi-resources/src/main/resources/conf/login-identity-providers.xml"],
      "priority": "high",
      "tags": ["security", "authorization", "identity"],
      "research_request": "Document policy models, identity mapping, and best practices for securing the NiFi server."
    },
    {
      "id": "service-main-parameter-contexts",
      "title": "Parameter Context Operations",
      "summary": "Detail how parameter contexts are defined, synchronized, and consumed within the main service runtime.",
      "category": "operations",
      "recommended_sources": ["nifi-commons/nifi-parameter/", "nifi-framework-bundle/nifi-framework/nifi-framework-core/"],
      "priority": "medium",
      "tags": ["parameters", "contexts", "runtime"],
      "research_request": "Describe lifecycle management, permissions, and rollback handling for parameter contexts."
    },
    {
      "id": "service-main-rest-api-surface",
      "title": "REST API Implementation Details",
      "summary": "Provide insight into the server-side implementation of NiFi's REST API and DTO serialization.",
      "category": "integration",
      "recommended_sources": ["nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/", "nifi-framework-bundle/nifi-framework/nifi-client-dto/"],
      "priority": "medium",
      "tags": ["rest", "api", "implementation"],
      "research_request": "Highlight resource controllers, DTO mappers, and version negotiation in the web API."
    },
    {
      "id": "service-main-observability-per-process",
      "title": "Per-Process-Group Observability",
      "summary": "Explain logging and metrics options that isolate visibility at the process-group level for troubleshooting.",
      "category": "operations",
      "recommended_sources": ["nifi-commons/nifi-per-process-group-logging/", "nifi-framework-bundle/nifi-framework/nifi-resources/src/main/resources/conf/logback.xml"],
      "priority": "medium",
      "tags": ["observability", "logging", "metrics"],
      "research_request": "Document configuration steps for scoped logging, metric exports, and best practices for monitoring flows."
    },
    {
      "id": "service-main-upgrade-strategy",
      "title": "Upgrade and Migration Strategy",
      "summary": "Detail recommended upgrade sequences, compatibility guarantees, and rollback planning for NiFi clusters.",
      "category": "operations",
      "recommended_sources": ["nifi-docs/src/main/asciidoc/administration-guide.adoc", "nifi-assembly/README.md"],
      "priority": "medium",
      "tags": ["upgrade", "migration", "operations"],
      "research_request": "Explain blue-green or rolling upgrade patterns and pre/post upgrade validation steps."
    },
    {
      "id": "service-main-python-runtime",
      "title": "Python Processor Runtime Support",
      "summary": "Describe how the main service hosts Python-based processors and manages their execution environment.",
      "category": "extensibility",
      "recommended_sources": ["nifi-extension-bundles/nifi-py4j-extension-bundle/", "nifi-framework-bundle/nifi-framework/nifi-runtime/"],
      "priority": "low",
      "tags": ["python", "processors", "runtime"],
      "research_request": "Clarify deployment steps, resource constraints, and monitoring guidance for Python processors within the server."
    }
  ]
}
